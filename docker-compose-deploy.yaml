version: "3.9"

services:
  # ====== Kafka Stack ======
  zoo1:
    image: confluentinc/cp-zookeeper:7.3.2
    hostname: zoo1
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_SERVER_ID: 1
      ZOOKEEPER_TICK_TIME: 2000
      ZOOKEEPER_INIT_LIMIT: 5
      ZOOKEEPER_SYNC_LIMIT: 2
    restart: unless-stopped
    networks:
      - chess-automate
    healthcheck:
      test: ["CMD", "zkServer.sh", "status"]
      interval: 30s
      timeout: 10s
      retries: 3

  kafka1:
    image: confluentinc/cp-kafka:7.3.2
    hostname: kafka1
    ports:
      - "9092:9092" # Exposed for external use
      - "9999:9999" # JMX port
    environment:
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka1:19092,EXTERNAL://host.docker.internal:9092
      KAFKA_LISTENERS: INTERNAL://0.0.0.0:19092,EXTERNAL://0.0.0.0:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_ZOOKEEPER_CONNECT: "zoo1:2181"
      KAFKA_BROKER_ID: 1
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_JMX_PORT: 9999
      KAFKA_CREATE_TOPICS: "create-execution:3:1,execution:3:1,game-update:1:1"
    depends_on:
      - zoo1
    restart: unless-stopped
    networks:
      - chess-automate
    healthcheck:
      test:
        ["CMD", "kafka-topics", "--list", "--bootstrap-server", "kafka1:19092"]
  # ====== Chess Service ======
  backend:
    build:
      context: ./backend
    container_name: backend
    restart: unless-stopped
    env_file:
      - ./backend/.env
    ports:
      - "8000:8000"
    depends_on:
      - kafka1
    networks:
      - chess-automate
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  ws:
    build: ./ws
    container_name: ws
    restart: unless-stopped
    env_file: ./ws/.env
    ports:
      - "8080:8080"
    depends_on:
      - kafka1
    networks:
      - chess-automate

  consumer:
    build:
      context: ./workers/consumer
    container_name: consumer
    restart: unless-stopped
    env_file:
      - ./workers/consumer/.env
    ports:
      - "9000:9000"
    depends_on:
      - kafka1
    networks:
      - chess-automate

networks:
  chess-automate:
    driver: bridge
