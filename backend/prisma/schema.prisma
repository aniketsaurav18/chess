generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model user {
  id           String    @id @default(cuid())
  username     String    @unique
  name         String?
  email        String    @unique
  password     String
  rating       Int       @default(1200)
  gamesAsWhite game[]    @relation("GamesAsWhite")
  gamesAsBlack game[]    @relation("GamesAsBlack")
  created_at   DateTime  @default(now())
  last_login   DateTime?

  @@index([rating])
}

model game {
  id              String      @id @default(cuid())
  white_player_id String?
  black_player_id String?
  whitePlayer     user?       @relation("GamesAsWhite", fields: [white_player_id], references: [id])
  blackPlayer     user?       @relation("GamesAsBlack", fields: [black_player_id], references: [id])
  status          GameStatus
  result          GameResult?
  time_control    Int         @default(10)
  moves           move[]      @relation("GameMoves")
  pgn             String?
  current_fen     String?
  start_at        DateTime    @default(now())
  end_at          DateTime?
  opening         String?
  event           String?

  @@index([id, result])
}

model move {
  id         String   @id @default(cuid())
  game_id    String
  game       game     @relation("GameMoves", fields: [game_id], references: [id])
  move       String
  move_num   Int
  fen_after  String?
  created_at DateTime @default(now())

  @@index([game_id, move_num])
}

enum GameStatus {
  OPEN
  IN_PROGRESS
  FINISHED
}

enum GameResult {
  WHITE
  BLACK
  DRAW
  WHITE_TIMEOUT
  BLACK_TIMEOUT
  WHITE_ABANDONED
  BLACK_ABANDONED
}
